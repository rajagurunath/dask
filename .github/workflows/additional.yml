name: Additional

on: [push, pull_request]

jobs:
  mindeps:
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        environment: ["mindeps-array", "mindeps-dataframe", "mindeps-non-optional", "mindeps-distributed"]

    env:
      COVERAGE: "true"

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          channel-priority: strict
          python-version: "3.7"
          environment-file: continuous_integration/environment-${{ matrix.environment }}.yaml
          activate-environment: test-environment
          auto-activate-base: false

      - name: Install
        shell: bash -l {0}
        run: source continuous_integration/scripts/install.sh

      - name: Run tests
        shell: bash -l {0}
        run: source continuous_integration/scripts/run_tests.sh

      - name: Coverage
        uses: codecov/codecov-action@v1

  check-hdfs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      test-hdfs: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1
        id: detect-trigger
        with:
          keyword: "test-hdfs"

  hdfs:
    needs: check-hdfs
    runs-on: "ubuntu-latest"
    if: |
      needs.check-hdfs.outputs.test-hdfs == 'true'
      || (github.repository == 'dask/dask' && github.event_name != 'pull_request')

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Start HDFS
        shell: bash -l {0}
        run: source continuous_integration/hdfs/startup_hdfs.sh

      - name: Install
        shell: bash -l {0}
        run: source continuous_integration/hdfs/install.sh

      - name: Run tests
        shell: bash -l {0}
        run: source continuous_integration/hdfs/run_tests.sh

  doctest:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          channel-priority: strict
          python-version: "3.8"
          environment-file: continuous_integration/environment-latest.yaml
          activate-environment: test-environment
          auto-activate-base: false

      - name: Install
        shell: bash -l {0}
        run: source continuous_integration/scripts/install.sh

      - name: Run tests
        shell: bash -l {0}
        run: pytest -v --doctest-modules --ignore-glob='*/test_*.py' dask

  imports:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          channel-priority: strict
          python-version: "3.7"
          activate-environment: test-environment
          auto-activate-base: false

      - name: Run import tests
        shell: bash -l {0}
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: source continuous_integration/scripts/test_imports.sh
